[界面跳转](https://blog.csdn.net/Easadon/article/details/108400571?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-108400571-blog-124600245.235^v36^pc_relevant_default_base3&spm=1001.2101.3001.4242.1&utm_relevant_index=3)

[QT连接Mysql数据库](https://huaweicloud.csdn.net/63a570fcb878a5454594752f.html?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~activity-1-124106176-blog-105411135.235^v36^pc_relevant_default_base3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~activity-1-124106176-blog-105411135.235^v36^pc_relevant_default_base3&utm_relevant_index=2)
一、ODBC数据库连接：
1.qt通过ODBC操作数据库
```c++
//main.cpp
#include "widget.h"
#include <QApplication>
#include <QSqlDatabase>
#include <QMessageBox>
#include <QDebug>
#include <QSqlError>


int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    Widget w;
    w.show();

    QSqlDatabase db = QSqlDatabase::addDatabase("QODBC");
        db.setHostName("127.0.0.1");
        db.setPort(3306);
        db.setDatabaseName("1");
        db.setUserName("Chanyelo");
        db.setPassword("20021023ljj");
        bool ok = db.open();
        if (ok){
            QMessageBox::information(NULL, "infor", "success");
        }
        else {
            QMessageBox::information(NULL, "infor", "open failed");
            qDebug()<<"error open database because"<<db.lastError().text();
        }

    return a.exec();
}
```
2.qt通过ODBC操作数据库
(1)查询数据
```c++
//查询数据库中所有表的名称
    QStringList tables = db.tables();
    foreach(QString table, tables)
        qDebug()<<table;

//ODBC查询数据
    QSqlQuery result = db.exec(" select * from users");
    while(result.next()){
        qDebug()<<"user_id:"<<result.value("user_id").toInt();
        qDebug()<<"name:"<<result.value("name").toString();
        qDebug()<<"password:"<<result.value("password").toString();
        qDebug()<<"score:"<<result.value("score").toInt()<<endl;
    }
```
(2)插入数据
```c++
//ODBC插入数据
    result.clear();
    bool result_successed = result.exec("insert into users(name,password,score) values ( 'joe2y','123456',0)");

    if(result_successed){
        qDebug()<<"插入成功！";
    }else {
        qDebug()<<"插入失败！";
}
```
(3)更新数据
```c++
//ODBC更新数据
    result.clear();
    bool result_successed2 = result.exec("update users set score=10 where user_id=2");

    if(result_successed2){
        qDebug()<<"更新成功！"<<endl;
    }else{
        qDebug()<<"更新失败！"<<endl;
    }
```

二、直接通过MySQL的驱动加载数据库
> QT += sql //在Pro文件添加
```c++
QSqlDatabase db = QSqlDatabase::addDatabase("QMYSQL");
    db.setHostName("127.0.0.1");
    db.setPort(3306);
    db.setDatabaseName("数据库名");
    db.setUserName("用户名");
    db.setPassword("密码");
    bool ok = db.open();
    if (ok){
        QMessageBox::information(this, "infor", "success");
    }
    else {
        QMessageBox::information(this, "infor", "open failed");
        qDebug()<<"error open database because"<<db.lastError().text();
    }
```